import net.minecraftforge.gradle.common.util.ModConfig
import net.minecraftforge.gradle.common.util.RunConfig

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = mod_version
group = "de.melanx.${modid}"
archivesBaseName = "${modid}-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings("snapshot", mappings_version)

    createRunConfig("client")
    createRunConfig("server")
    createRunConfig("data", { RunConfig run ->
        run.args "--mod", modid, "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources")
    })
}

def createRunConfig(String name, Closure extra = {}) {
    minecraft.runs.create(name) { RunConfig run ->
        run.workingDirectory project.file("run_" + name)
        run.property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
        run.property "forge.logging.console.level", "debug"
        run.mods.create(modid) { ModConfig mod ->
            source sourceSets.main
        }
    }.with(extra)
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "IE"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "MelanX maven"
        url = "https://maven.melanx.de/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    runtimeOnly fg.deobf("de.melanx.recipeprinter:recipeprinter-1.16.3:1.1+")
    compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${mc_version}-${ie_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "morexfood",
                "Specification-Vendor"    : "morexfood",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "morexfood",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
